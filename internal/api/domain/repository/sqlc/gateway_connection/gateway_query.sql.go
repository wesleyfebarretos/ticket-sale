// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: gateway_query.sql

package gateway_connection

import (
	"context"
)

const getActive = `-- name: GetActive :one
SELECT 
    id, uuid, name, description, client_id, client_secret, "order", active, is_deleted, test_environment, notif_user, notif_password, soft_descriptor, gateway_process_id, webhook_url, url, auth_type, use_3ds, adq_code_3ds, default_adq_code, use_antifraud, created_by, updated_by, created_at, updated_at, gateway_provider_id
FROM
    fin.gateway
WHERE
    active IS TRUE
AND
    is_deleted IS FALSE
LIMIT 1
`

func (q *Queries) GetActive(ctx context.Context) (FinGateway, error) {
	row := q.db.QueryRow(ctx, getActive)
	var i FinGateway
	err := row.Scan(
		&i.ID,
		&i.Uuid,
		&i.Name,
		&i.Description,
		&i.ClientID,
		&i.ClientSecret,
		&i.Order,
		&i.Active,
		&i.IsDeleted,
		&i.TestEnvironment,
		&i.NotifUser,
		&i.NotifPassword,
		&i.SoftDescriptor,
		&i.GatewayProcessID,
		&i.WebhookUrl,
		&i.Url,
		&i.AuthType,
		&i.Use3ds,
		&i.AdqCode3ds,
		&i.DefaultAdqCode,
		&i.UseAntifraud,
		&i.CreatedBy,
		&i.UpdatedBy,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.GatewayProviderID,
	)
	return i, err
}
